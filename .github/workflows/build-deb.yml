name: .deb -> S3

on:
  push:
    branches: main
    paths:
      - 'stage/**'
      - '.github/**'
  repository_dispatch:
  workflow_dispatch:

concurrency: 
  group: debian_builder
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.host-os }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        host-os: [ubuntu-20.04, [self-hosted, Linux, ARM64, focal]]
        stage: [unstable, testing, release]
        distro-codename: [ubuntu-focal, ubuntu-impish, debian-bullseye] # ubuntu-jammy,
        include:
          - host-os: ubuntu-20.04
            arch: amd64
          - host-os: [self-hosted, Linux, ARM64, focal]
            arch: arm64
          - distro-codename: ubuntu-focal
            distro: ubuntu
            codename: focal
            container: ubuntu:20.04
          - distro-codename: ubuntu-impish
            distro: ubuntu
            codename: impish
            container: ubuntu:21.10
          #- distro-codename: ubuntu-jammy
          #  distro: ubuntu
          #  codename: jammy
          #  container: ubuntu:22.04
          - distro-codename: debian-bullseye
            distro: debian
            codename: bullseye
            container: ubuntu:20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set Job Parameters
        id: init
        run: |
          echo ::set-output name=MANIFEST_PATH::"/github/home/manifests"
          echo ::set-output name=PKG_REPO_PATH::"/github/home/repo"
          echo ::set-output name=PKG_BUILD_DIR::"/github/home/packages"
          echo ::set-output name=GH_REPO_ROOT::"/__w/voulage/voulage"
          echo ::set-output name=stage::${{ matrix.stage }}
          echo ::set-output name=distro::${{ matrix.distro }}
          echo ::set-output name=codename::${{ matrix.codename }}
          echo ::set-output name=arch::${{ matrix.arch }}
          echo ::set-output name=target::${{ matrix.stage }}-${{ matrix.distro }}-${{ matrix.codename }}-${{ matrix.arch }}
          echo ::set-output name=s3_bucket::regolith-${{ matrix.stage }}-${{ matrix.distro }}-${{ matrix.codename }}-${{ matrix.arch }}
          echo ::set-output name=repo_url::https://regolith-${{ matrix.stage }}-${{ matrix.distro }}-${{ matrix.codename }}-${{ matrix.arch }}.s3.us-east-2.amazonaws.com
      - name: Clean tmp
        run: |
          set -x
          rm -Rf ${{ steps.init.outputs.PKG_REPO_PATH }} || true
          rm -Rf ${{ steps.init.outputs.MANIFEST_PATH }} || true
          mkdir ${{ steps.init.outputs.MANIFEST_PATH }}
          rm -Rf ${{ steps.init.outputs.PKG_BUILD_DIR }} || true
          mkdir ${{ steps.init.outputs.PKG_BUILD_DIR }}
      - name: Pull Manifest
        run: |
          set -x
          manifest_url="https://${{ steps.init.outputs.s3_bucket }}.s3.us-east-2.amazonaws.com/manifest.txt"
          wget -P "${{ steps.init.outputs.PKG_REPO_PATH }}" "$manifest_url" || true
      - name: Check for changes
        id: changes
        run: |
          set -x
          set -e
          apt update
          DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends jq git devscripts reprepro
          CHANGE_OUTPUT=$(${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/main.sh ${{ steps.init.outputs.GH_REPO_ROOT }} ${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/ext-debian.sh "${{ steps.init.outputs.stage }}" "${{ steps.init.outputs.distro }}" "${{ steps.init.outputs.codename }}" "${{ steps.init.outputs.arch }}" "unneeded to check change" "unneeded to check change" check ${{ steps.init.outputs.MANIFEST_PATH }} ${{ steps.init.outputs.PKG_REPO_PATH }} ${{ steps.init.outputs.PKG_BUILD_DIR }} | tail -n1)
          if [ "$CHANGE_OUTPUT" = "No package changes found, exiting." ]; then
            echo ::set-output name=changed::0
          else
            echo ::set-output name=changed::1
          fi
      - name: Install AWS CLI
        if: steps.changes.outputs.changed == 1
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends tzdata
          apt install -y sudo python3-pip               
          sudo pip install awscli
      - name: Pull from S3
        if: steps.changes.outputs.changed == 1
        run: |
          set -x
          rm -Rf ${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo
          aws s3 sync \
            s3://${{ steps.init.outputs.s3_bucket }} \
            ${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo \
            --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - name: Build Setup
        if: steps.changes.outputs.changed == 1
        run: |
          set -x
          if [ ! -d "${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo" ]; then
            mkdir -p "${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo"
          else
            sudo chown -R $(whoami) ${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo
          fi     
          if [ -d "${{ steps.init.outputs.PKG_REPO_PATH }}" ]; then
            rm -Rf "${{ steps.init.outputs.PKG_REPO_PATH }}"
          fi     
          mv ${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo "${{ steps.init.outputs.PKG_REPO_PATH }}" || true
          ls -l "${{ steps.init.outputs.PKG_REPO_PATH }}"
      - name: Build
        if: steps.changes.outputs.changed == 1
        run: |
          set -x
          export DEBEMAIL="regolith.linux@gmail.com"
          export DEBFULLNAME="Regolith Linux"
          export DEBIAN_FRONTEND=noninteractive
          sudo apt update
          DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends tzdata
          sudo apt install -y devscripts reprepro jq
          mkdir -p ~/.gnupg/
          printf "${{ secrets.PACKAGE_PRIVATE_KEY }}" | base64 --decode > ~/.gnupg/private.key
          gpg --batch --import ~/.gnupg/private.key
          ${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/main.sh \
            ${{ steps.init.outputs.GH_REPO_ROOT }} \
            ${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/ext-debian.sh \
            "${{ steps.init.outputs.stage }}" \
            "${{ steps.init.outputs.distro }}" \
            "${{ steps.init.outputs.codename }}" \
            "${{ steps.init.outputs.arch }}" \
            "${{ steps.init.outputs.repo_url }}" \
            Default \
            build \
            ${{ steps.init.outputs.MANIFEST_PATH }} \
            ${{ steps.init.outputs.PKG_REPO_PATH }} \
            ${{ steps.init.outputs.PKG_BUILD_DIR }}

          find ${{ steps.init.outputs.PKG_REPO_PATH }}
          mv "${{ steps.init.outputs.PKG_REPO_PATH }}" ${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo
      - name: Push to S3
        if: steps.changes.outputs.changed == 1
        run: |
          set -x
          aws s3 sync \
            ${{ steps.init.outputs.GH_REPO_ROOT }}/generated-repo/ \
            s3://${{ steps.init.outputs.s3_bucket }} \
            --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  test:
    needs: build
    uses: ./.github/workflows/test-desktop-installable.yml
