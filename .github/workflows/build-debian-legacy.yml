name: .deb -> S3 legacy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-20.04'
    steps:
      - name: Set Job Parameters
        id: init
        run: |
          echo ::set-output name=stage::unstable
          echo ::set-output name=distro::ubuntu
          echo ::set-output name=codename::focal
          echo ::set-output name=arch::amd64
          echo ::set-output name=target::unstable-ubuntu-focal-amd64
          echo ::set-output name=s3_bucket::
          echo ::set-output name=manifest_url::
          echo ::set-output name=manifest_path::/tmp/generated-repo
          # echo ::set-output name=s3_bucket::regolith-${{ steps.init.outputs.stage }}-${{ steps.init.outputs.distro }}-${{ steps.init.outputs.codename }}-${{ steps.init.outputs.arch }}
          echo ::set-output name=repo_url::https://regolith-unstable-ubuntu-focal-amd64.s3.us-east-2.amazonaws.com
      - name: Workspace setup
        run: |
          set -x
          if [ ! -d "${{ steps.init.outputs.manifest_path }}" ]; then
            mkdir -p "${{ steps.init.outputs.manifest_path }}"
          fi
          pwd
          ls .
      - name: Pull Repo Manifest
        if: steps.init.outputs.manifest_url != ""
        run: |
          wget -O  "${{ steps.init.outputs.manifest_path }}/prev-manifest.txt" "${{ steps.init.outputs.manifest_url }}"
      - name: Generate Empty Repo Manifest
        if: steps.init.outputs.manifest_url == ""
        run: |
          set -x
          pwd
          ls .
          touch "${{ steps.init.outputs.manifest_path }}/prev-manifest.txt"
          find .
      - name: Generate Manifest
        run: |
          set -x
          ls ${{ steps.init.outputs.manifest_path }}
          $GITHUB_WORKSPACE/.github/scripts/compute-package-changes.sh \
            $GITHUB_WORKSPACE \
            ${{ steps.init.outputs.stage }}  \
            ${{ steps.init.outputs.distro }}  \
            ${{ steps.init.outputs.codename }}  \
            ${{ steps.init.outputs.arch }} \
            /tmp/manifest-build \
            ${{ steps.init.outputs.manifest_path }}/next-manifest.txt
      - id: manifest-changes
        name: Find Changes
        run: |
          PKG_LIST=$(diff ${{ steps.init.outputs.manifest_path }}/prev-manifest.txt \
            ${{ steps.init.outputs.manifest_path }}/next-manifest.txt \
            --diff-filter=AM | grep '^[+|-][^+|-]' | cut -d" " -f1 | cut -c2- | uniq | sort)
          if [ -z "$PKG_LIST" ]; then
            echo ::set-output name=changed::0
            echo "No manifest changes found"
          else
            echo ::set-output name=changed::1
            echo ::set-output name=package_build_list::$PKG_LIST
            echo "Updated packages: $PKG_LIST"
          fi
      - name: Pull repo from S3
        if: ${{ steps.manifest-changes.outputs.changed == 1 && steps.init.outputs.s3_bucket != "" }}
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          source: 's3://${{ steps.init.outputs.s3_bucket }}'
          dest: 'generated-repo'
      - name: Build Packages
        if: steps.manifest-changes.outputs.changed == 1
        run: |
          # export DEBEMAIL="regolith.linux@gmail.com"
          # export DEBFULLNAME="Regolith Linux"
          # sudo apt update
          # sudo apt install -y devscripts reprepro
          # mkdir -p ~/.gnupg/
          # printf "${{ secrets.PACKAGE_PRIVATE_KEY }}" | base64 --decode > ~/.gnupg/private.key
          # gpg --batch --import ~/.gnupg/private.key
          $GITHUB_WORKSPACE/.github/scripts/build-debian-package.sh \
            $GITHUB_WORKSPACE ${{ steps.init.outputs.stage }}  \
            ${{ steps.init.outputs.distro }}  \
            ${{ steps.init.outputs.codename }}  \
            ${{ steps.init.outputs.arch }} \
            $GITHUB_WORKSPACE/generated-repo \
            ${{ steps.init.outputs.repo_url }} \
            /tmp/package-build default
      - name: Repo cleanup
        run: |
          rm "${{ steps.init.outputs.manifest_path }}/prev-manifest.txt"
          rm "${{ steps.init.outputs.manifest_path }}/manifest.txt"
          mv "${{ steps.init.outputs.manifest_path }}/next-manifest.txt" "${{ steps.init.outputs.manifest_path }}/manifest.txt"
      - name: Push repo to S3
        if: steps.manifest-changes.outputs.changed == 1 && steps.init.outputs.s3_bucket != ""
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          source: 'generated-repo'
          dest: 's3://${{ steps.init.outputs.s3_bucket }}'
          flags: --recursive
